<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
    <groupId>com.ruoyi</groupId>
    <artifactId>ruoyi</artifactId>
    <version>3.3</version>

    
    <properties>
	    <ruoyi.version>3.3</ruoyi.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<shiro.version>1.9.1</shiro.version>
		<thymeleaf.extras.shiro.version>2.0.0</thymeleaf.extras.shiro.version>
		<mybatis.boot.version>1.3.2</mybatis.boot.version>
		<druid.version>1.1.14</druid.version>
		<bitwalker.version>1.19</bitwalker.version>
		<kaptcha.version>2.3.2</kaptcha.version>
		<swagger.version>2.7.0</swagger.version>
		<pagehelper.boot.version>1.2.5</pagehelper.boot.version>
		<oshi.version>3.9.1</oshi.version>
		<commons.io.version>2.5</commons.io.version>
		<commons.fileupload.version>1.3.3</commons.fileupload.version>
		<jsoup.version>1.11.3</jsoup.version>
		<poi.version>3.17</poi.version>
		<velocity.version>1.7</velocity.version>
	</properties>
	
    <!-- 依赖声明 -->
    <dependencyManagement>
        <dependencies>

			<!--
       从Zip文件创建，添加，提取，更新，删除文件
       读/写密码保护的Zip文件
       支持AES 128/256加密
       支持标准邮​​编加密
       支持Zip64格式
       支持存储（无压缩）和Deflate压缩方法
       从Split Zip文件创建或提取文件（例如：z01，z02，... zip）
       支持Unicode文件名
       进度监视器
       -->
			<!--zip4j依赖,解压zip压缩-->
			<dependency>
				<groupId>net.lingala.zip4j</groupId>
				<artifactId>zip4j</artifactId>
				<version>1.3.2</version>
			</dependency>

			<!--解压rar压缩-->
			<dependency>
				<groupId>com.github.junrar</groupId>
				<artifactId>junrar</artifactId>
				<version>0.7</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.json/json -->
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>2.4</version>
				<classifier>jdk15</classifier>
			</dependency>

			<!-- alibaba fastJSON -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.41</version>
			</dependency>

			<!-- SpringBoot的依赖配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.1.1.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!--阿里数据库连接池 -->
			<dependency>
	            <groupId>com.alibaba</groupId>
	            <artifactId>druid-spring-boot-starter</artifactId>
	            <version>${druid.version}</version>
	        </dependency>
	        
	        <!--验证码 -->
			<dependency>
				<groupId>com.github.penggle</groupId>
				<artifactId>kaptcha</artifactId>
				<version>${kaptcha.version}</version>
			</dependency>
			
			<!--Shiro核心框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			
			<!-- Shiro使用Srping框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			
			<!-- Shiro使用EhCache缓存框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${shiro.version}</version>
			</dependency>
	
			<!-- thymeleaf模板引擎和shiro框架的整合 -->
			<dependency>
				<groupId>com.github.theborakompanioni</groupId>
				<artifactId>thymeleaf-extras-shiro</artifactId>
				<version>${thymeleaf.extras.shiro.version}</version>
			</dependency>
	
			<!-- 解析客户端操作系统、浏览器等 -->
			<dependency>
				<groupId>eu.bitwalker</groupId>
				<artifactId>UserAgentUtils</artifactId>
				<version>${bitwalker.version}</version>
			</dependency>
			
			<!-- pagehelper 分页插件 -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper.boot.version}</version>
			</dependency>
			
			<!-- 获取系统信息 -->
			<dependency>
				<groupId>com.github.oshi</groupId>
				<artifactId>oshi-core</artifactId>
				<version>${oshi.version}</version>
			</dependency>
			
			<!-- swagger2-->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			
			<!-- swagger2-UI-->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger.version}</version>
			</dependency>
            
            <!--io常用工具类 -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>
	
			<!--文件上传工具类 -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
			</dependency>
			
			<!-- HTML解析器 -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>
			
			<!-- excel工具 -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
			
			<!--velocity代码生成使用模板 -->
	        <dependency>
	            <groupId>org.apache.velocity</groupId>
	            <artifactId>velocity</artifactId>
	            <version>${velocity.version}</version>
	        </dependency>
            
            <!-- 定时任务-->
			<dependency>
				<groupId>com.ruoyi</groupId>
				<artifactId>ruoyi-quartz</artifactId>
				<version>${ruoyi.version}</version>
			</dependency>
	
			<!-- 代码生成-->
			<dependency>
				<groupId>com.ruoyi</groupId>
				<artifactId>ruoyi-generator</artifactId>
				<version>${ruoyi.version}</version>
			</dependency>
			
			<!-- 核心模块-->
			<dependency>
				<groupId>com.ruoyi</groupId>
				<artifactId>ruoyi-framework</artifactId>
				<version>${ruoyi.version}</version>
			</dependency>
			
	        <!-- 系统模块-->
			<dependency>
				<groupId>com.ruoyi</groupId>
				<artifactId>ruoyi-system</artifactId>
				<version>${ruoyi.version}</version>
			</dependency>
			
			<!-- 通用工具-->
	        <dependency>
	            <groupId>com.ruoyi</groupId>
	            <artifactId>ruoyi-common</artifactId>
	            <version>${ruoyi.version}</version>
	        </dependency>
	        
        </dependencies>
    </dependencyManagement>

    <modules>
	    <module>ruoyi-admin</module>
		<module>ruoyi-framework</module>
		<module>ruoyi-system</module>
		<module>ruoyi-quartz</module>
		<module>ruoyi-generator</module>
        <module>ruoyi-common</module>
    </modules>
    <packaging>pom</packaging>


	<dependencies>

		 

	</dependencies>

	<build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration><encoding>UTF-8</encoding>
					<!-- 过滤后缀为pem、pfx的证书文件 -->
					<nonFilteredFileExtensions>
                         <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                 <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                <nonFilteredFileExtension>cer</nonFilteredFileExtension>
                 <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                <nonFilteredFileExtension>swf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
        </plugins>
    </build>

	<repositories>
		<repository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

</project>